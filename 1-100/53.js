/*
?Сделайте генератор пазлов, который будет генерировать ситуацию, когда человеку нужно будет применить деление в реальной жизни.

*/

/*
import nightsky::puzzle::Puzzle;
import nightsky::puzzle::PuzzleImage;
import nightsky::puzzle::Reveal;
import nightsky::puzzle::RevealPrecise;
import nightsky::canvas::Canvas;
import nightsky::canvas::Point2D;
import nightsky::canvas::Color;
import nightsky::canvas::TextAlign;
import nightsky::canvas::TextAlignLeft;
import nightsky::canvas::TextAlignRight;
import nightsky::canvas::TextAlignCenter;
import std::math::Math;
import std::collections::List;
import std::collections::ListSort;
import std::string::String;

class Main {
    function gen_puzzle() -> Puzzle {
        let add = [
            "Можно сложить расходы на разные категории, чтобы узнать общий бюджет.",
            "Сложение времени на каждую часть маршрута дает общее время на весь маршрут.",
            "Можно сложить вес всех предметов, которые берутся в поездку, чтобы узнать общий вес багажа.",
            "Если есть разные партии товара, можно сложить их количество, чтобы узнать общее.",
            "Можно сложить доходы всех членов семьи, чтобы узнать общий доход.",
            "Если человек ест несколько блюд, можно сложить калории каждого блюда для определения общего количества калорий.",
            "Если ученик сдает несколько тестов, можно сложить баллы, чтобы узнать итоговый результат.",
            "Если задачи занимают разное время, можно сложить продолжительность каждой, чтобы узнать общее время.",
            "Если у человека есть определенный список друзей и он добавляет новых, это тоже пример сложения.",
            "Если человек проходит определенное количество шагов за несколько интервалов, можно сложить шаги за каждый интервал, чтобы узнать общее количество шагов."
        ][Main::getRandomIntInRange(0, 9)];
        let min = [
            "Если человек платит наличными, вычитание стоимости покупки из суммы, которую он отдал, дает сдачу.",
            "Можно вычесть прошедшее время из общего, чтобы узнать, сколько осталось.",
            "Если человек тратит деньги из своего бюджета, можно вычесть потраченные суммы из общего бюджета, чтобы узнать остаток.",
            "Если есть скидка на товар, можно вычесть сумму скидки из начальной стоимости для расчета цены со скидкой.",
            "Если известно, сколько топлива было изначально и сколько израсходовано, можно вычесть израсходованное, чтобы узнать остаток.",
            "Если человек выплатил часть долга, можно вычесть сумму платежа из общего долга для расчета остатка.",
            "Если в проекте потрачено определенное количество ресурсов, можно вычесть его из общего запаса, чтобы узнать остаток.",
            "Если поездка началась какое-то время назад, можно вычесть это время от общего времени поездки для получения оставшегося времени.",
            "Если есть общий вес и вес упаковки, можно вычесть вес упаковки для расчета чистого веса.",
            "Вычитание налогов из общей суммы доходов дает чистый доход."
        ][Main::getRandomIntInRange(0, 9)];
        let mult = [
            "Если нужно узнать общую стоимость при покупке нескольких одинаковых товаров, можно умножить цену одного товара на количество.",
            "Если известно количество калорий в одной порции и нужно узнать, сколько калорий в нескольких порциях, можно умножить количество калорий на число порций.",
            "Если человек едет с постоянной скоростью и хочет узнать, сколько он проедет за несколько часов, нужно умножить скорость на количество часов.",
            "Если человек зарабатывает определенную сумму в неделю, можно умножить эту сумму на 4 или 4.33 для расчета месячного дохода.",
            "Для постройки забора определенной длины можно умножить длину одной секции на количество секций.",
            "Если известен годовой процент по вкладу и требуется узнать доход за несколько лет, можно умножить процент на количество лет.",
            "Если известен расход топлива на 100 км, можно умножить его на количество сотен километров в поездке.",
            "Если рецепт на одного человека, можно умножить ингредиенты на нужное количество людей.",
            "Если товар продается по весу, можно умножить цену за килограмм на количество килограммов.",
            "Если человек зарабатывает определенную сумму за смену, можно умножить её на количество смен."
        ][Main::getRandomIntInRange(0, 9)];
        let del = [
            "Если группа друзей обедает вместе и хочет поделить чек поровну, нужно будет разделить общую сумму на количество людей.",
            "Если человек купил упаковку, например, из 6 бутылок воды за определенную цену и хочет узнать цену одной бутылки, он может разделить общую стоимость на количество бутылок.",
            "Если в рецепте указано количество ингредиентов на большее количество порций, а человеку нужно меньше, он может разделить количество каждого ингредиента, чтобы получить правильное количество для меньшего количества порций.",
            "Если человек знает свою зарплату за месяц и хочет узнать, сколько он зарабатывает в час, можно разделить месячную зарплату на количество рабочих часов.",
            "При планировании маршрута можно разделить расстояние на предполагаемую скорость, чтобы рассчитать, сколько времени займет поездка.",
            "Если нужно узнать налог с покупки, можно разделить общую сумму на налоговый коэффициент (или, наоборот, вычислить налог как часть от общей стоимости).",
            "При составлении бюджета на месяц можно распределить доход на недели, разделив общую сумму на 4 (или 4.33 для точного количества недель в месяце).",
            "Для расчета расхода топлива на 1 км, человек может разделить количество потраченного топлива на общее пройденное расстояние.",
            "Если есть ограниченное время для выполнения нескольких задач, можно разделить общее количество времени на количество задач, чтобы узнать, сколько времени можно посвятить каждой.",
            "При делении маршрута прогулки или экскурсии на равные участки по времени можно определить, сколько времени следует проводить на каждом участке, чтобы завершить прогулку вовремя."
        ][Main::getRandomIntInRange(0, 9)];
        
        
        let list = [add, min, mult, del];
        for (let i in 0..10) {
            list = Main::shuffleArray(list);
        }
        let ans = 0;

        let name = "Инна|Аня|Алина|Оля|Катя|Полина|Арина|Вера|Надя|Соня|Бьянка|Василиса|Ванесса|Вероника|Жанна".split("|")[Main::getRandomIntInRange(0, 14)];
        let wher = "в школе|на факультативе|у репетитора|на олимпиаде".split("|")[Main::getRandomIntInRange(0, 3)]
        let what = "задачу|задачу на внимательность|упражнение|тест, в котором есть задача|дополнительное задание|задание".split("|")[Main::getRandomIntInRange(0, 5)]
        let task = "отмечены|показаны|выставлены|указаны|видны".split("|")[Main::getRandomIntInRange(0, 4)];
        let whatDo = "вычислить|понять|выяснить|определить|найти".split("|")[Main::getRandomIntInRange(0, 4)];

        let conditions = [
            "несколько ситуаций, когда человеку нужно применить математические операции в реальной жизни",
            "несколько примеров ситуаций, в которых человеку необходимо использовать математические операции в реальной жизни",
            "разные случаи, когда требуется применять математику в повседневной жизни",
            "несколько жизненных ситуаций, в которых нужны математические расчеты",
            "примеры, когда человек применяет математику в быту",
            "ситуации, где математические операции необходимы в повседневной жизни",
            "разные ситуации, требующие математических вычислений в реальной жизни",
            "несколько примеров использования математики в реальных жизненных ситуациях",
            "ситуации из жизни, когда необходимы математические операции",
            "примеры жизненных случаев, в которых нужны математические знания",
            "ситуации, где математика применяется в повседневных задачах"
        ][Main::getRandomIntInRange(0, 10)];

        let sc = name + " получила " + wher + " " + what + ". "
            + " На листике " + task + " " + conditions + ".\n\n"
        for (let i in 0..4) {
            sc += String::from_int(i+1) + ". " + list[i] + "\n";
            
            if (list[i] == del) {
                ans = i+1;
            }
        }
        sc += "\nЕё попросили " + whatDo +  " номер ситуации, где нужно применить деление в реальной жизни.";

        if(Main::getRandomIntInRange(0, 1) == 1) {
            sc = "Даны " + conditions + ".\n\n"
            for (let i in 0..4) {
                sc += String::from_int(i+1) + ". " + list[i] + "\n";

                if (list[i] == del) {
                    ans = i+1;
                }
            } 
            sc += "\nТребуется определить номер ситуации, где нужно применить деление в реальной жизни.";
        }

        let desc = sc 
            + "\n Пример вывода, следующий: \"2\""
            + "\n<reveal ans>Ответ</reveal>";

        let expl = "Будем просматривать каждый пример по очереди и поймём что: \n";
        for (let i in 0..4) {
            expl += "Пример " + String::from_int(i+1) + " - это ";
            
            if (list[i] == add) {
                expl += "сложение \n"
            } else if (list[i] == min) {
                expl += "вычитание \n"
            } else if (list[i] == mult) {
                expl += "умножение \n"
            } else if (list[i] == del) {
                expl += "деление \n"
            }
        }
        expl += "\nСледовательно ответ: " + String::from_int(ans);

        return new Puzzle {
            question: desc,
            solution: expl,
            images: [],
            reveals: [
                new RevealPrecise {
                    name: "ans",
                    answer: String::from_int(ans)
                } as Reveal
            ],
        }
    }

    function shuffleArray(array: List<String>) -> List<String> {
        for (let i in 1..array.length()) {
            let j = Main::getRandomIntInRange(i-1, i);
            let temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }

        return array;
    }
    
    function getRandomIntInRange(a: int, b: int) -> int {
        return (Math::random() * (b - a + 1) as float + a as float) as int;
    }
}
*/